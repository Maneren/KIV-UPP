VAGRANTFILE_API_VERSION = "2"

N_VMS = 2

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.box = "debian/testing64"
  config.vm.provider "virtualbox" do |v|
    v.memory = 2048
    v.cpus = 2
  end
  config.vm.synced_folder './', '/opt/data', SharedFoldersEnableSymlinksCreate: false

  hosts_file = []
  1.upto(N_VMS) do |i|
    config.vm.define vm_name = "hydra-#{i}" do |config|
      config.vm.hostname = vm_name
      ip = "172.16.0.#{100+i}"
      config.vm.network "private_network",
        ip: ip,
        virtualbox__intnet: "clusternet"
      config.vm.network "forwarded_port", guest: 8001, host: 8080, auto_correct: true
    end
  end

  script = <<-SCRIPT
    set -x
    if [[ ! -e /etc/.provisioned ]]; then

      for i in {1..N_VMS}; do
        ip="172.16.0.$((100+i))"
        echo "$ip hydra-$i" >> /etc/hosts
      done

	  echo "    StrictHostKeyChecking no" >> /etc/ssh/ssh_config

      if [[ ! -e /vagrant/id_rsa ]]; then
        ssh-keygen -t rsa -f /vagrant/id_rsa -N ""
      fi

      install -m 600 -o vagrant -g vagrant /vagrant/id_rsa /home/vagrant/.ssh/
      (echo; cat /vagrant/id_rsa.pub) >> /home/vagrant/.ssh/authorized_keys

      apt-get -y update
      apt-get -y install openmpi-bin libopenmpi-dev build-essential g++ cmake just
      touch /etc/.provisioned
    fi
  SCRIPT
  script.sub! 'N_VMS', N_VMS.to_s
  config.vm.provision "shell", inline: script

  config.trigger.after :provision do |trigger|
    trigger.info = "Running post-provisioning script..."
    trigger.run = {
      inline: <<-SHELL
        for i in {1..N_VMS}; do
		  if grep -q "hydra-$i" /home/vagrant/.ssh/known_hosts; then
            echo "hydra-$i already in global known hosts"
		  else
		    ssh-keyscan -H hydra-$i >> /home/vagrant/.ssh/known_hosts
		done
      SHELL
    }
  end

end
